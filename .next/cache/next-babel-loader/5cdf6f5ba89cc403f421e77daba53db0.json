{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/me3n/WebstormProjects/with-mobx-state-tree/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Provider } from \"mobx-react\";\nimport { getSnapshot } from \"mobx-state-tree\";\nimport App from \"next/app\";\nimport { initializeStore } from \"../stores/store\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  _createClass(MyApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, isServer, store, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                //\n                // Use getInitialProps as a step in the lifecycle when\n                // we can initialize our store\n                //\n                isServer = false;\n                store = initializeStore(isServer); //\n                // Check whether the page being rendered by the App has a\n                // static getInitialProps method and if so call it\n                //\n\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 7;\n                return Component.getInitialProps(ctx);\n\n              case 7:\n                pageProps = _context.sent;\n\n              case 8:\n                return _context.abrupt(\"return\", {\n                  initialState: getSnapshot(store),\n                  isServer: isServer,\n                  pageProps: pageProps\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n    _this.store = initializeStore(props.isServer, props.initialState);\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Provider, {\n        store: this.store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), pageProps.children, \" \", __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"asdsa\")));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/me3n/WebstormProjects/with-mobx-state-tree/pages/_app.js"],"names":["React","Provider","getSnapshot","App","initializeStore","MyApp","Component","ctx","isServer","store","pageProps","getInitialProps","initialState","props","children"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,eAAT,QAAgC,iBAAhC;;IAEqBC,K;;;;;;;;;;;;;;;;AACYC,gBAAAA,S,QAAAA,S,EAAWC,G,QAAAA,G;AACxC;AACA;AACA;AACA;AACMC,gBAAAA,Q;AACAC,gBAAAA,K,GAAQL,eAAe,CAACI,QAAD,C,EAC7B;AACA;AACA;AACA;;AACIE,gBAAAA,S,GAAY,E;;qBACZJ,SAAS,CAACK,e;;;;;;uBACML,SAAS,CAACK,eAAV,CAA0BJ,GAA1B,C;;;AAAlBG,gBAAAA,S;;;iDAEK;AACLE,kBAAAA,YAAY,EAAEV,WAAW,CAACO,KAAD,CADpB;AAELD,kBAAAA,QAAQ,EAARA,QAFK;AAGLE,kBAAAA,SAAS,EAATA;AAHK,iB;;;;;;;;;;;;;;;;;;AAOT,iBAAYG,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKJ,KAAL,GAAaL,eAAe,CAACS,KAAK,CAACL,QAAP,EAAiBK,KAAK,CAACD,YAAvB,CAA5B;AAFiB;AAGlB;;;;6BAEQ;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCP,SADD,eACCA,SADD;AAAA,UACYI,SADZ,eACYA,SADZ;AAEP,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2BA,SAAS,CAACI,QAArC,OAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA/C,CADF,CADF;AAKD;;;;EAnCgCX,G;;SAAdE,K","sourcesContent":["import React from \"react\";\nimport { Provider } from \"mobx-react\";\nimport { getSnapshot } from \"mobx-state-tree\";\nimport App from \"next/app\";\nimport { initializeStore } from \"../stores/store\";\n\nexport default class MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    //\n    // Use getInitialProps as a step in the lifecycle when\n    // we can initialize our store\n    //\n    const isServer = typeof window === \"undefined\";\n    const store = initializeStore(isServer);\n    //\n    // Check whether the page being rendered by the App has a\n    // static getInitialProps method and if so call it\n    //\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    return {\n      initialState: getSnapshot(store),\n      isServer,\n      pageProps\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.store = initializeStore(props.isServer, props.initialState);\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <Provider store={this.store}>\n        <Component {...pageProps}>{pageProps.children} <div>asdsa</div></Component>\n      </Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}