{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Provider } from \"mobx-react\";\nimport { getSnapshot } from \"mobx-state-tree\";\nimport App from \"next/app\";\nimport { initializeStore } from \"../stores/store\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  _createClass(MyApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, isServer, store, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                //\n                // Use getInitialProps as a step in the lifecycle when\n                // we can initialize our store\n                //\n                isServer = false;\n                store = initializeStore(isServer); //\n                // Check whether the page being rendered by the App has a\n                // static getInitialProps method and if so call it\n                //\n\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 7;\n                return Component.getInitialProps(ctx);\n\n              case 7:\n                pageProps = _context.sent;\n\n              case 8:\n                return _context.abrupt(\"return\", {\n                  initialState: getSnapshot(store),\n                  isServer: isServer,\n                  pageProps: pageProps\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n    _this.store = initializeStore(props.isServer, props.initialState);\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Provider, {\n        store: this.store\n      }, __jsx(Component, pageProps, pageProps.children, \" \", __jsx(\"div\", null, \"asdsa\")));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":null,"metadata":{},"sourceType":"module"}