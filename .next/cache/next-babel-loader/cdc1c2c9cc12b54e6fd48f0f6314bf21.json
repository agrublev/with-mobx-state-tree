{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport { types, applySnapshot } from 'mobx-state-tree';\nlet store = null;\nconst Store = types.model({\n  lastUpdate: types.Date,\n  light: false\n}).actions(self => {\n  let timer;\n\n  function start() {\n    timer = setInterval(() => {\n      // mobx-state-tree doesn't allow anonymous callbacks changing data\n      // pass off to another action instead\n      self.update();\n    }, 1000);\n  }\n\n  function update() {\n    self.lastUpdate = _Date$now();\n    self.light = true;\n  }\n\n  function stop() {\n    clearInterval(timer);\n  }\n\n  return {\n    start,\n    stop,\n    update\n  };\n});\nexport function initializeStore(isServer, snapshot = null) {\n  if (isServer) {\n    store = Store.create({\n      lastUpdate: _Date$now()\n    });\n  }\n\n  if (store === null) {\n    store = Store.create({\n      lastUpdate: _Date$now()\n    });\n  }\n\n  if (snapshot) {\n    applySnapshot(store, snapshot);\n  }\n\n  return store;\n}","map":null,"metadata":{},"sourceType":"module"}