{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Provider } from \"mobx-react\";\nimport { getSnapshot } from \"mobx-state-tree\";\nimport App from \"next/app\";\nimport { initializeStore } from \"../stores/store\";\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    //\n    // Use getInitialProps as a step in the lifecycle when\n    // we can initialize our store\n    //\n    const isServer = true;\n    const store = initializeStore(isServer); //\n    // Check whether the page being rendered by the App has a\n    // static getInitialProps method and if so call it\n    //\n\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      initialState: getSnapshot(store),\n      isServer,\n      pageProps\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.store = initializeStore(props.isServer, props.initialState);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: this.store\n    }, __jsx(Component, pageProps, pageProps.children, \" \", __jsx(\"div\", null, \"asdsa\")));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}